name: Build & Deploy to Elastic Beanstalk

on:
  push:
    branches: 
      - master

env:
  AWS_REGION: ${{ secrets.AWS_REGION }} # ajuste conforme sua região
  APPLICATION_NAME: ${{ secrets.EB_APP_NAME }}
  ENVIRONMENT_NAME: ${{ secrets.EB_ENV_NAME }}
  S3_BUCKET_NAME: elasticbeanstalk-us-west-2-119741074789
  DEPLOY_ZIP: deploy-${{ github.run_number }}.zip

jobs:
  deploy:
    name: Build e Deploy to AWS Elastic Beanstalk
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Publish
        run: npm publish --access public --workspace ${{ github.workspace }}/out

      - name: Criar pacote zip
        run: |
          zip -r $DEPLOY_ZIP . -x '*.git*' -x 'node_modules/*' -x 'tests/*' -x 'README*' -x 'LICENSE'

      - name: Set version label
        id: vars
        run: echo "VERSION_LABEL=v1-${{ github.run_id }}-${{ github.run_number }}" >> $GITHUB_ENV

      # Deploy no Elastic Beanstalk

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.APPLICATION_NAME }}
          environment_name: ${{ env.ENVIRONMENT_NAME }}
          version_label: v${{ env.GITHUB_ENV }}
          region: ${{ env.AWS_REGION }}
          version_description: ${{ github.sha }}
          deployment_package: $DEPLOY_ZIP

      - name: Wait for deployment to complete
        run: |
          echo "Esperando o deploy ser concluído..."
          for i in {1..60}; do
            STATUS=$(aws elasticbeanstalk describe-environments \
              --environment-names ${{ secrets.EB_ENV_NAME }} \
              --query "Environments[0].Status" \
              --output text)

            HEALTH=$(aws elasticbeanstalk describe-environments \
              --environment-names ${{ secrets.EB_ENV_NAME }} \
              --query "Environments[0].Health" \
              --output text)

            echo "Status: $STATUS | Health: $HEALTH"

            if [[ "$STATUS" == "Ready" && "$HEALTH" == "Green" ]]; then
              echo "Deploy concluído com sucesso!"
              exit 0
            fi

            sleep 10
          done

          echo "Deploy não concluiu a tempo ou falhou."
          exit 1
