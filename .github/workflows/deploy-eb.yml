name: Build & Deploy to Elastic Beanstalk

on:
  push:
    branches: 
      - master

jobs:
  deploy:
    name: Deploy to AWS Elastic Beanstalk
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: v${{ github.run_number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set version label
        id: vars
        run: echo "VERSION_LABEL=v1-${{ github.run_id }}-${{ github.run_number }}" >> $GITHUB_ENV

      # Build da imagem
      - name: Log in no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build e push da imagem
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # Preparar arquivo Dockerrun com nova tag
      - name: Criar bundle de deploy
        run: |
          mkdir bundle
          sed "s|:latest|:${{ env.IMAGE_TAG }}|" Dockerrun.aws.json > bundle/Dockerrun.aws.json
          cp -r .ebextensions bundle/.ebextensions || true
          cd bundle
          zip -r ../deploy.zip .

      # Upload para o S3
      - name: Upload to S3
        run: |
          aws s3 cp deploy.zip s3://boa-massa-artifacts/deploy-${{ env.VERSION_LABEL }}.zip

      - name: Create new EB application version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.EB_APP_NAME }} \
            --version-label ${{ env.VERSION_LABEL }} \
            --source-bundle S3Bucket=boa-massa-artifacts,S3Key=deploy-${{ env.VERSION_LABEL }}.zip

      # Deploy no Elastic Beanstalk
      - name: Deploy to environment
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name ${{ secrets.EB_ENV_NAME }} \
            --version-label ${{ env.VERSION_LABEL }}

      - name: Wait for deployment to complete
        run: |
          echo "Esperando o deploy ser concluído..."
          for i in {1..60}; do
            STATUS=$(aws elasticbeanstalk describe-environments \
              --environment-names ${{ secrets.EB_ENV_NAME }} \
              --query "Environments[0].Status" \
              --output text)

            HEALTH=$(aws elasticbeanstalk describe-environments \
              --environment-names ${{ secrets.EB_ENV_NAME }} \
              --query "Environments[0].Health" \
              --output text)

            echo "Status: $STATUS | Health: $HEALTH"

            if [[ "$STATUS" == "Ready" && "$HEALTH" == "Green" ]]; then
              echo "Deploy concluído com sucesso!"
              exit 0
            fi

            sleep 10
          done

          echo "Deploy não concluiu a tempo ou falhou."
          exit 1
