name: Build & Deploy to Elastic Beanstalk

on:
  push:
    branches: 
      - master

env:
  AWS_REGION: ${{ secrets.AWS_REGION }} # ajuste conforme sua região
  APPLICATION_NAME: ${{ secrets.EB_APP_NAME }}
  ENVIRONMENT_NAME: ${{ secrets.EB_ENV_NAME }}
  S3_BUCKET_NAME: boa-massa-artifacts
  DEPLOY_ZIP: deploy-${{ github.run_number }}.zip

jobs:
  deploy:
    name: Build e Deploy to AWS Elastic Beanstalk
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Criar pacote zip
        run: |
          zip -r $DEPLOY_ZIP . -x '*.git*' -x 'node_modules/*' -x 'tests/*'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set version label
        id: vars
        run: echo "VERSION_LABEL=v1-${{ github.run_id }}-${{ github.run_number }}" >> $GITHUB_ENV

      - name: Enviar artefato para S3
        run: |
          aws s3 cp $DEPLOY_ZIP s3://$S3_BUCKET_NAME/$DEPLOY_ZIP
      
      - name: Create new EB application version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name $APPLICATION_NAME \
            --version-label v${{ github.run_number }} \
            --source-bundle S3Bucket=S3_BUCKET_NAME,S3Key=deploy-$DEPLOY_ZIP

      # Deploy no Elastic Beanstalk
      - name: Atualizar ambiente Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name $ENVIRONMENT_NAME \
            --version-label v${{ github.run_number }}

      - name: Wait for deployment to complete
        run: |
          echo "Esperando o deploy ser concluído..."
          for i in {1..60}; do
            STATUS=$(aws elasticbeanstalk describe-environments \
              --environment-names ${{ secrets.EB_ENV_NAME }} \
              --query "Environments[0].Status" \
              --output text)

            HEALTH=$(aws elasticbeanstalk describe-environments \
              --environment-names ${{ secrets.EB_ENV_NAME }} \
              --query "Environments[0].Health" \
              --output text)

            echo "Status: $STATUS | Health: $HEALTH"

            if [[ "$STATUS" == "Ready" && "$HEALTH" == "Green" ]]; then
              echo "Deploy concluído com sucesso!"
              exit 0
            fi

            sleep 10
          done

          echo "Deploy não concluiu a tempo ou falhou."
          exit 1
